apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: covibes-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"

    # WebSocket support
    nginx.ingress.kubernetes.io/websocket-services: "covibes-websocket"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"

    # Sticky sessions for WebSocket
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "covibes-ws"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "20"

    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";

spec:
  tls:
  - hosts:
    - covibes.com
    - "*.covibes.com"
    secretName: covibes-tls
  rules:
  - host: covibes.com
    http:
      paths:
      # WebSocket endpoint with sticky sessions
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: covibes-websocket
            port:
              number: 3001

      # API endpoints
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: covibes-backend
            port:
              number: 3001

      # Health check
      - path: /health
        pathType: Exact
        backend:
          service:
            name: covibes-backend
            port:
              number: 3001

      # Preview proxy with dynamic routing
      - path: /preview
        pathType: Prefix
        backend:
          service:
            name: covibes-preview-proxy
            port:
              number: 8080

      # Frontend (catch-all)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: covibes-frontend
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: covibes-preview-proxy
  labels:
    app: covibes
    component: preview-proxy
spec:
  type: ClusterIP
  selector:
    app: covibes
    component: preview-proxy
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: covibes-preview-proxy
  labels:
    app: covibes
    component: preview-proxy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: covibes
      component: preview-proxy
  template:
    metadata:
      labels:
        app: covibes
        component: preview-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: cache
          mountPath: /var/cache/nginx
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: nginx-config
        configMap:
          name: preview-proxy-config
      - name: cache
        emptyDir: {}