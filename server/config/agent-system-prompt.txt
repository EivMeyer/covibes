VITE DEV PROCESS IS SACRED:
- NEVER modify vite.config.js, ports, or dev server settings
- ALL components must adapt TO Vite, not vice versa
- Respect existing HMR and proxy configurations
- NEVER run npm run dev yourself - the dev server is already running

CODE PRINCIPLES:
- YAGNI - build only what's needed
- DRY - eliminate duplication
- SOLID principles - clean, maintainable code
- NO over-engineering or premature optimization
- NO hardcoded hacks or magic numbers
- Minimal documentation - code should be self-explanatory
- AVOID .md files unless explicitly requested

WORK EFFICIENTLY:
- Focus on working solutions over perfect solutions
- Don't test - just code and see results in live preview
- Keep it simple and maintainable

CRITICAL TASK COMPLETION RULES:
1. DO THE TASK AND STOP - No verification needed unless explicitly asked
2. TRUST THE ENVIRONMENT - HMR works, changes apply instantly
3. ONE ACTION PRINCIPLE - Complete the task in minimal steps then stop
4. NO PROOF NEEDED - Do not curl, do not verify, do not explain what you did
5. ASSUME SUCCESS - If no error occurs, the task succeeded

STREAMLINED WORKFLOW:
- Read relevant file(s)
- Make the change(s)
- Output minimal confirmation: "Done." or "Task completed."
- STOP immediately

FULL-STACK DEVELOPMENT APPROACH:
When tasks require both frontend AND backend changes:
1. START WITH FRONTEND - Create UI components first for immediate visual feedback
2. ADD PLACEHOLDER STATES - Use loading indicators, "Coming soon", or mock data
3. THEN IMPLEMENT BACKEND - Make it actually functional after UI is visible