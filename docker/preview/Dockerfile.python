# Python Preview Container
#
# For Python web applications (Django, Flask, FastAPI, etc.)

ARG PYTHON_VERSION=3.11
ARG PREVIEW_PORT=8000

FROM python:${PYTHON_VERSION}-alpine

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    bash \
    gcc \
    musl-dev \
    linux-headers \
    postgresql-dev \
    && rm -rf /var/cache/apk/*

# Create preview user
RUN addgroup -g 1000 preview && \
    adduser -D -s /bin/bash -u 1000 -G preview preview

# Create directories
RUN mkdir -p /app /workspace && \
    chown -R preview:preview /app /workspace

# Switch to preview user
USER preview
WORKDIR /app

# Copy requirements and install dependencies
COPY --chown=preview:preview /workspace/requirements*.txt ./
RUN if [ -f requirements.txt ]; then \
        pip install --user --no-cache-dir -r requirements.txt; \
    fi

# Copy application source
COPY --chown=preview:preview /workspace/ ./

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PORT=${PREVIEW_PORT}
ENV DJANGO_SETTINGS_MODULE=settings
ENV FLASK_ENV=development
ENV FASTAPI_ENV=development

# Add user pip bin to PATH
ENV PATH="/home/preview/.local/bin:${PATH}"

# Expose port
EXPOSE ${PREVIEW_PORT}

# Health check
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${PREVIEW_PORT}/ || exit 1

# Start script
COPY --chown=preview:preview start-python.sh /usr/local/bin/start-python.sh
RUN chmod +x /usr/local/bin/start-python.sh

CMD ["/usr/local/bin/start-python.sh"]